// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _RCOMPSs_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// start_runtime
void start_runtime();
RcppExport SEXP _RCOMPSs_start_runtime() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    start_runtime();
    return R_NilValue;
END_RCPP
}
// stop_runtime
void stop_runtime(int code);
RcppExport SEXP _RCOMPSs_stop_runtime(SEXP codeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type code(codeSEXP);
    stop_runtime(code);
    return R_NilValue;
END_RCPP
}
// register_core_element
void register_core_element(std::string CESignature, std::string ImplSignature, std::string ImplConstraints, std::string ImplType, std::string ImplLocal, std::string ImplIO, CharacterVector prolog, CharacterVector epilog, CharacterVector container, CharacterVector typeArgs);
RcppExport SEXP _RCOMPSs_register_core_element(SEXP CESignatureSEXP, SEXP ImplSignatureSEXP, SEXP ImplConstraintsSEXP, SEXP ImplTypeSEXP, SEXP ImplLocalSEXP, SEXP ImplIOSEXP, SEXP prologSEXP, SEXP epilogSEXP, SEXP containerSEXP, SEXP typeArgsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type CESignature(CESignatureSEXP);
    Rcpp::traits::input_parameter< std::string >::type ImplSignature(ImplSignatureSEXP);
    Rcpp::traits::input_parameter< std::string >::type ImplConstraints(ImplConstraintsSEXP);
    Rcpp::traits::input_parameter< std::string >::type ImplType(ImplTypeSEXP);
    Rcpp::traits::input_parameter< std::string >::type ImplLocal(ImplLocalSEXP);
    Rcpp::traits::input_parameter< std::string >::type ImplIO(ImplIOSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type prolog(prologSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type epilog(epilogSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type container(containerSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type typeArgs(typeArgsSEXP);
    register_core_element(CESignature, ImplSignature, ImplConstraints, ImplType, ImplLocal, ImplIO, prolog, epilog, container, typeArgs);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RCOMPSs_rcpp_hello_world", (DL_FUNC) &_RCOMPSs_rcpp_hello_world, 0},
    {"_RCOMPSs_start_runtime", (DL_FUNC) &_RCOMPSs_start_runtime, 0},
    {"_RCOMPSs_stop_runtime", (DL_FUNC) &_RCOMPSs_stop_runtime, 1},
    {"_RCOMPSs_register_core_element", (DL_FUNC) &_RCOMPSs_register_core_element, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_RCOMPSs(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
